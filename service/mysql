/*==============================================================*/
/* DBMS name:      MySQL 5.0                                    */
/* Created on:     2017/6/10 15:03:41                           */
/*==============================================================*/


drop table if exists DdclassDate;

drop table if exists Ddmajor;

drop table if exists Ddrole;

drop table if exists Ddstate;

drop table if exists calltheroll;

drop table if exists course;

drop table if exists mark;

drop table if exists personnel;

drop table if exists question;

drop table if exists schoolinfo;

/*==============================================================*/
/* Table: DdclassDate                                           */
/*==============================================================*/
create table DdclassDate
(
   dname                char(8),
   classDate            int not null,
   state                char(6) default '启用',
   primary key (classDate)
);

/*==============================================================*/
/* Table: Ddmajor                                               */
/*==============================================================*/
create table Ddmajor
(
   dname                char(16),
   major                int not null,
   state                char(6) default '启用',
   primary key (major)
);

/*==============================================================*/
/* Table: Ddrole                                                */
/*==============================================================*/
create table Ddrole
(
   dname                char(10),
   role                 int not null,
   state                char(6) default '启用',
   primary key (role)
);

/*==============================================================*/
/* Table: Ddstate                                               */
/*==============================================================*/
create table Ddstate
(
   dname                char(10),
   callstate            int not null,
   state                char(6) default '启用',
   primary key (callstate)
);

/*==============================================================*/
/* Table: calltheroll                                           */
/*==============================================================*/
create table calltheroll
(
   autoid               bigint not null auto_increment,
   courseName           char(20),
   ID                   char(12),
   callstate            int,
   calldate             date,
   callposition         char(7),
   primary key (autoid)
);

/*==============================================================*/
/* Table: course                                                */
/*==============================================================*/
create table course
(
   courseName           char(20) not null,
   ID                   char(12),
   dailyWeight          double,
   finalWeight          double,
   picketLine           int,
   classSession         char(6),
   classLocation        char(16),
   classDate            int,
   classOrder           char(6),
   shape                char(7),
   primary key (courseName)
);

/*==============================================================*/
/* Table: mark                                                  */
/*==============================================================*/
create table mark
(
   courseName           char(20) not null,
   ID                   char(12) not null,
   dailyScore           double,
   finalScore           double,
   markreserve          char(50),
   primary key (courseName, ID)
);

/*==============================================================*/
/* Table: personnel                                             */
/*==============================================================*/
create table personnel
(
   ID                   char(12) not null,
   Ppassword            char(12),
   Pname                char(12),
   major                int,
   role                 int,
   pclass               int,
   primary key (ID)
);

/*==============================================================*/
/* Table: question                                              */
/*==============================================================*/
create table question
(
   autoid               bigint not null auto_increment,
   courseName           char(20),
   ID                   char(12),
   attendanceDate       date,
   score                double,
   primary key (autoid)
);

/*==============================================================*/
/* Table: schoolinfo                                            */
/*==============================================================*/
create table schoolinfo
(
   school               char(20) not null,
   college              char(26) not null,
   department           char(20),
   primary key (school, college)
);

alter table calltheroll add constraint FK_Reference_12 foreign key (callstate)
      references Ddstate (callstate) on delete cascade on update cascade;

alter table calltheroll add constraint FK_Reference_5 foreign key (ID)
      references personnel (ID) on delete cascade on update cascade;

alter table calltheroll add constraint FK_Reference_6 foreign key (courseName)
      references course (courseName) on delete cascade on update cascade;

alter table course add constraint FK_Reference_11 foreign key (classDate)
      references DdclassDate (classDate) on delete cascade on update cascade;

alter table course add constraint FK_Reference_15 foreign key (ID)
      references personnel (ID) on delete cascade on update cascade;

alter table mark add constraint FK_Reference_8 foreign key (ID)
      references personnel (ID) on delete cascade on update cascade;

alter table mark add constraint FK_Reference_9 foreign key (courseName)
      references course (courseName) on delete cascade on update cascade;

alter table personnel add constraint FK_Reference_13 foreign key (role)
      references Ddrole (role) on delete cascade on update cascade;

alter table personnel add constraint FK_Reference_14 foreign key (major)
      references Ddmajor (major) on delete cascade on update cascade;

alter table question add constraint FK_Reference_10 foreign key (courseName, ID)
      references mark (courseName, ID) on delete cascade on update cascade;






#新建数据库表
########################################################################################################################




########################################################################################################################
########################################################################################################################
#数据字典______ddrole
INSERT INTO ddrole(dname,role) VALUES('系统管理员',1);
INSERT INTO ddrole(dname,role) VALUES('教师',2);
INSERT INTO ddrole(dname,role) VALUES('学生',3);


#数据字典______ddmajor
INSERT INTO ddmajor(dname,major) VALUES('软件工程',1);
INSERT INTO ddmajor(dname,major) VALUES('网络工程',2);
INSERT INTO ddmajor(dname,major) VALUES('计算机科学与技术',3);



#数据字典______ddstate
INSERT INTO ddstate(dname,callstate) VALUES('签到',1);
INSERT INTO ddstate(dname,callstate) VALUES('请假',2);
INSERT INTO ddstate(dname,callstate) VALUES('旷课',3);
INSERT INTO ddstate(dname,callstate) VALUES('迟到',4);



#数据字典______ddclassdate
INSERT INTO ddclassdate(dname,classDate) VALUES('星期一',1);
INSERT INTO ddclassdate(dname,classDate) VALUES('星期二',2);
INSERT INTO ddclassdate(dname,classDate) VALUES('星期三',3);
INSERT INTO ddclassdate(dname,classDate) VALUES('星期四',4);
INSERT INTO ddclassdate(dname,classDate) VALUES('星期五',5);
INSERT INTO ddclassdate(dname,classDate) VALUES('星期六',6);
INSERT INTO ddclassdate(dname,classDate) VALUES('星期日',7);
########################################################################################################################

########################################################################################################################
#校园信息表
INSERT INTO schoolinfo VALUES ('福州大学','数学与计算机学院','计算机系');
DELETE FROM schoolinfo WHERE school='福州大学';

########################################################################################################################









########################################################################################################################
#-------------------------操作-----------------------------------------
#人员表____personnel
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327000','160327000','龙三',3,3,1); 
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327001','160327001','雷三',1,3,1); 

INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327010','160327010','聚三',1,3,1); 
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327003','160327003','尊三',1,3,1); 
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327004','160327004','过三',1,3,2); 
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327005','160327005','于三',1,3,2); 
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327006','160327006','雾三',1,3,2); 
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327007','160327007','法三',1,3,2); 
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327008','160327008','器三',1,3,2); 
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327009','160327009','可三',1,3,2); 

INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327999','160327999','系统管理员',1,1,1);
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327777','160327777','唐二',1,2,1);
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327778','160327778','水二',1,2,1);
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('160327779','160327779','宝二',1,2,1);

INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('1','1','雷三',1,3,1);

INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('1','1','雷三',1,3,1); 
INSERT INTO personnel (ID,Ppassword,Pname,major,role,pclass) VALUES ('2','2','雷三',1,3,1); 

SELECT ID,Ppassword,Pname,dm.dname AS major ,dr.dname AS role FROM personnel p,ddmajor dm ,ddrole dr WHERE p.major=dm.major AND p.role=dr.role;

SELECT * FROM personnel WHERE ID='1';
UPDATE personnel SET Pname='地三' WHERE ID='160327000';
DELETE FROM personnel;
########################################################################################################################




########################################################################################################################
#课程表____course
INSERT INTO course (courseName,ID,dailyWeight,finalWeight,picketLine,classSession,classLocation,classDate,classOrder,shape) 
            VALUES('网络工程','160327777',0.3,0.7,7,'1-2','东教201','5','2-12','10*12');
INSERT INTO course (courseName,ID,dailyWeight,finalWeight,picketLine,classSession,classLocation,classDate,classOrder,shape) 
            VALUES('离散数学','160327778',0.3,0.7,8,'3-4','东教310','3','1-18','9*10');
INSERT INTO course (courseName,ID,dailyWeight,finalWeight,picketLine,classSession,classLocation,classDate,classOrder,shape) 
            VALUES('软件工程','160327779',0.3,0.7,8,'5-6','计算机学院3号楼106','4','1-14','5*8');
SELECT * FROM course;

DELETE FROM course WHERE dailyWeight=0.5;
########################################################################################################################


########################################################################################################################
#点名表____calltheroll
INSERT INTO calltheroll (courseName,ID,callstate,calldate,callposition) VALUES ('网络工程','160327000',1,NOW(),'1*2');
INSERT INTO calltheroll (courseName,ID,callstate,calldate,callposition) VALUES ('离散数学','160327001',1,NOW(),'3*5');
SELECT * FROM calltheroll;
SELECT * FROM calltheroll WHERE calldate BETWEEN '2017-04-12' AND '2017-4-19';
SELECT * FROM calltheroll WHERE ID=(SELECT ID FROM personnel WHERE Pname = '龙三');
SELECT * FROM calltheroll WHERE ID IN (SELECT ID FROM personnel);

DELETE FROM  calltheroll;
########################################################################################################################




########################################################################################################################
#成绩表____mark
INSERT INTO mark (courseName,ID,dailyScore,finalScore) VALUES ('离散数学','160327000',86.0,82.0);
INSERT INTO mark (courseName,ID,dailyScore,finalScore) VALUES ('离散数学','160327001',85.0,92.0);
SELECT * FROM mark;
########################################################################################################################



########################################################################################################################
#表____question
INSERT INTO question (attendanceDate,score,ID,courseName) VALUES (NOW(),85,'160327000','离散数学');
INSERT INTO question (attendanceDate,score,ID,courseName) VALUES (NOW(),85,'160327000','离散数学');
SELECT * FROM mark;	
########################################################################################################################





